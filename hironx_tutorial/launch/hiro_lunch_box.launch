<launch>
  <arg name="cloud_machine" default="localhost"
       doc="point cloud processor machine" />
  
  <arg name="gazebo" default="true" />
  <arg name="launch_rviz" default="true" />

 
  <!-- add for screenpoint -->
  <arg name="inpoints" default="/head_camera/depth_registered/points"/>
  <arg name="image" default="/head_camera/rgb"/>
  <arg name="image_type" default="image_rect_color"/>
  <arg name="USE_SYNC" default="false"/>
  <arg name="PUBLISH_POINTS" default="false"/>
  <arg name="manager" default="hiro_lunch_box_nodelet_manager"/>
  
  <!-- nodelet manager is executed by tabletop_object_detector.launch -->
  <!--
  <node name="$(arg manager)" pkg="nodelet" type="nodelet" args="manager"
  machine="$(arg cloud_machine)" output="screen" />
  -->
  
  <group if="$(arg gazebo)">
    <arg name="paused" default="false" />
    <!-- Launch Gazebo -->
    <include file="$(find hironx_tutorial)/launch/hironxjsk_gazebo_world.launch">
      <arg name="world_file" value="$(find hironx_tutorial)/worlds/hiro_lunch_box.world" />
      <arg name="paused" value="$(arg paused)" />
    </include>
  </group>
  
  
  <!-- Launch recognition pipeline -->
  <include file="$(find jsk_pcl_ros)/sample/tabletop_object_detector.launch">
    <!-- arg name="input" value="/head_camera/depth_registered/points" / -->
    <arg name="input" value="/extract_indices/output" />
    <arg name="sensor_frame" value="head_camera_rgb_optical_frame" />
    <arg name="manager" value="$(arg manager)" />
    <arg name="machine" value="$(arg cloud_machine)" />
    <!-- <arg name="launch_manager" value="false" /> -->  <!-- This prevents multi_plane_estimate from running -->
    <arg name="launch_manager" value="true" />
    <arg name="launch_openni" value="false" />
    <arg name="launch_tracking" value="false" />
    <arg name="launch_rviz" value="false" />
    <arg name="publish_tf" value="true" />    
  </include >


  <!-- to make box -->
  <!-- include file="$(find jsk_pcl_ros)/launch/hsi_color_filter.launch">
    <arg name="INPUT" value="/head_camera/depth_registered/points" />
  </include -->
    
    
  <!-- 2d food coords to 3d coords -->
  <node name="pointcloud_screenpoint_nodelet" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/PointcloudScreenpoint $(arg manager)"
        output="screen" clear_params="true" respawn="true"
        machine="$(arg cloud_machine)">
    <remap from="~points" to="$(arg inpoints)" />
    <remap from="~point" to="$(arg image)/$(arg image_type)/screenpoint" />
    <rosparam>
      queue_size: 10
      crop_size: 10
      search_size: 16
    </rosparam>
    <param name="use_sync" value="$(arg USE_SYNC)" />
  </node>


  <!-- attention_clipper -->
  <arg name="INPUT_CLOUD" value="/head_camera/depth_registered/points" />

  <node name="attention_clipper"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/AttentionClipper $(arg manager)">
    <remap from="~input/points" to="$(arg INPUT_CLOUD)" />
    <rosparam>
      initial_pos: [0.9, 0, 0]
      initial_rot: [0, 0, 0]
      dimension_x: 1.0
      dimension_y: 1.0
      dimension_z: 0.3
      frame_id: WAIST
    </rosparam >
  </node>

  <node name="extract_indices"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ExtractIndices $(arg manager)">
    <remap from="~input" to="$(arg INPUT_CLOUD)" />
    <remap from="~indices" to="attention_clipper/output/point_indices" />
    <rosparam>
      keep_organized: true
    </rosparam>
  </node>
  
  
  <!-- Visualization -->
  <group if="$(arg launch_rviz)">
    <node name="rviz"
          pkg="rviz" type="rviz"
          args="-d $(find hironx_tutorial)/config/hiro_lunch_box.rviz">
    </node>
  </group>

</launch>
